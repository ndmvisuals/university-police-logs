mutate(year = year(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]])
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
write_rds(umd_police_arrest_data_clean, "../police-app/umd_arrest.rds")
write_rds(umd_police_incident_data_clean, "../police-app/umd_incident.rds")
umd_arrest = readRDS("C:/Users/nicho/Documents/GitHub/university_police_logs/police-app/umd_arrest.rds")
umd_incident = readRDS("C:/Users/nicho/Documents/GitHub/university_police_logs/police-app/umd_incident.rds")
umd_incident %>% group_by(umpd_case_number) %>% count() %>% View()
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type)
View(umpd_incident_type)
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type) %>%
View()
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type) %>%
group_by(umpd_case_number) %>%
count() %>%
View()
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type)
umd_police_arrest_data_clean = umd_police_arrest_data %>%
mutate(date = substr(arrested_date_time_charge,1,8)) %>%
rowwise() %>%
mutate(time = strsplit(arrested_date_time_charge," ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]])
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
## get incident_type for arrest data
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type)
umd_police_arrest_data_clean_with_type = left_join(umpd_arrest_data_clean, umpd_incident_type, by = "umpd_number")
umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_number")
umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_case_number")
View(umd_police_arrest_data_clean_with_type)
umd_police_arrest_data_clean = umd_police_arrest_data %>%
mutate(date = substr(arrested_date_time_charge,1,8)) %>%
rowwise() %>%
mutate(time = strsplit(arrested_date_time_charge," ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
filter(year >= 2014)
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
## get incident_type for arrest data
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type)
umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_case_number")
write_rds(umd_police_arrest_data_clean_with_type, "../police-app/umd_arrest.rds")
write_rds(umd_police_incident_data_clean, "../police-app/umd_incident.rds")
umd_police_arrest_data_clean = umd_police_arrest_data %>%
mutate(date = substr(arrested_date_time_charge,1,8)) %>%
rowwise() %>%
mutate(time = strsplit(arrested_date_time_charge," ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
filter(year >= 2014)
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
## get incident_type for arrest data
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type)
umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_case_number")
View(umd_police_arrest_data_clean_with_type)
library(shiny); runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
## Number of Arrest cases
# just a line graph
umd_arrest_cases_by_year = umd_police_arrest_data_clean %>%
distinct(year, umpd_case_number) %>%
group_by(year) %>%
summarise(number_arrest_cases = n())
# people by race, can be over all, and then can be by year
umd_people_by_race = umd_police_arrest_data_clean %>%
distinct(year, umpd_case_number, arrest_number, race)
## overall
all_people_by_race = umd_people_by_race %>%
group_by(race) %>%
summarise(num_people = n())
## by year
umd_by_year_race = umd_people_by_race %>%
group_by(year, race) %>%
summarise(num_people = n())
ggplot(umd_by_year_race, aes(x = year, y = num_people, fill = race))+
geom_bar(stat = "identity", position = "dodge")
## Number of Arrest cases
# just a line graph
umd_arrest_cases_by_year = umd_police_arrest_data_clean_with_type %>%
distinct(year, umpd_case_number) %>%
group_by(year) %>%
summarise(number_arrest_cases = n())
# people by race, can be over all, and then can be by year
umd_people_by_race = umd_police_arrest_data_clean_with_type %>%
distinct(year, umpd_case_number, arrest_number, race, type)
## overall
all_people_by_race = umd_people_by_race %>%
group_by(race) %>%
summarise(num_people = n())
## by year
umd_by_year_race = umd_people_by_race %>%
group_by(year, race) %>%
summarise(num_people = n())
ggplot(umd_by_year_race, aes(x = year, y = num_people, fill = race))+
geom_bar(stat = "identity", position = "dodge")
umd_people_by_race = umd_police_arrest_data_clean_with_type %>%
distinct(year, umpd_case_number, arrest_number, race, type)
umd_people_by_race = umd_police_arrest_data_clean_with_type %>%
distinct(year, umpd_case_number, arrest_number, race, type)
View(umd_people_by_race)
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
View(umd_people_by_race)
View(umd_people_by_race)
View(umd_people_by_race)
View(all_people_by_race)
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
library(shiny); runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
library(shiny); runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
14 + 14 +7 + 15
14 + (14*3) + 7 +15
78-64
library(shiny); runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
library(shiny); runApp('police_log_final_arrest.R')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# For general data science
# For data cleaning
library(janitor)
# For loading Excel files
library(readxl)
# For working with datetime
library(lubridate)
library(jsonlite)
# For U.S. Census Bureau data
#library(tigris)
# For pretty tables
#library(kableExtra)
library(knitr)
library(plotly)
library(tidyverse)
## Functions
# Function for formatted table output
output_formatted_table = function(table, text){
table %>%
kable(caption = text) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), font_size = 14, fixed_thead = T) %>%
scroll_box(width = "100%")
}
# UMD
umd_police_arrest_data <- read_csv("../data/handmade/umd/umd_police_arrest_data_2021-12-07.csv")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# For general data science
# For data cleaning
library(janitor)
# For loading Excel files
library(readxl)
# For working with datetime
library(lubridate)
library(jsonlite)
# For U.S. Census Bureau data
#library(tigris)
# For pretty tables
#library(kableExtra)
library(knitr)
library(plotly)
library(tidyverse)
## Functions
# Function for formatted table output
output_formatted_table = function(table, text){
table %>%
kable(caption = text) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), font_size = 14, fixed_thead = T) %>%
scroll_box(width = "100%")
}
# UMD
umd_police_arrest_data <- read_csv("../data/handmade/umd/umd_police_arrest_data_2021-12-07.csv")
umd_police_incident_data <- read_csv("../data/handmade/umd/umd_police_incident_data_2021_12_07.csv")
# UMD
umd_police_arrest_data <- read_csv("../data/handmade/umd/umd_police_arrest_data_2021-12-07.csv")
umd_police_incident_data <- read_csv("../data/handmade/umd/umd_police_incident_data_2021_12_07.csv")
# UMD
umd_police_arrest_data <- read_csv("../data/handmade/umd/umd_police_arrest_data_2021-12-07.csv")
umd_police_incident_data <- read_csv("../data/handmade/umd/umd_police_incident_data_2021-12-07.csv")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# For general data science
# For data cleaning
library(janitor)
# For loading Excel files
library(readxl)
# For working with datetime
library(lubridate)
library(jsonlite)
# For U.S. Census Bureau data
#library(tigris)
# For pretty tables
#library(kableExtra)
library(knitr)
library(plotly)
library(tidyverse)
## Functions
# Function for formatted table output
output_formatted_table = function(table, text){
table %>%
kable(caption = text) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), font_size = 14, fixed_thead = T) %>%
scroll_box(width = "100%")
}
# UMD
umd_police_arrest_data <- read_csv("../data/handmade/umd/umd_police_arrest_data_2021-12-07.csv")
umd_police_incident_data <- read_csv("../data/handmade/umd/umd_police_incident_data_2021-12-07.csv")
# Clean UMD
umd_police_arrest_data_clean = umd_police_arrest_data %>%
mutate(date = substr(arrested_date_time_charge,1,8)) %>%
rowwise() %>%
mutate(time = strsplit(arrested_date_time_charge," ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
filter(year >= 2014)
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
## get incident_type for arrest data
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type)
umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_case_number")
write_rds(umd_police_arrest_data_clean_with_type, "../police-app-arrests/umd_arrest.rds")
write_rds(umd_police_incident_data_clean, "../police-app-arrests/umd_incident.rds")
#### data for arrest totals
cases_by_year = umd_police_arrest_data_clean_with_type %>%
distinct(umpd_case_number, .keep_all = TRUE) %>%
group_by(year, type) %>%
summarise(number = n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(year) %>%
slice_max(order_by = number, n = 3) %>%
mutate(top_3 = "yes") %>%
select(-number)
cases_by_year_og = umd_police_arrest_data_clean_with_type %>%
distinct(umpd_case_number, .keep_all = TRUE) %>%
group_by(year, type) %>%
summarise(number = n())
arrest_combined = left_join(cases_by_year_og, cases_by_year, by = c("year", "type")) %>%
mutate(top_3 = ifelse(is.na(top_3), "no", top_3)) %>%
mutate(final_type = ifelse(top_3 == "yes", type, "Types Other Than Top 3"))
write_rds(arrest_combined, "../police-app-arrests/arrest_combined.rds")
runApp('police_log_final_arrest.R')
View(umd_police_arrest_data_clean_with_type)
View(umd_police_arrest_data_clean_with_type)
View(umd_police_arrest_data_clean_with_type)
View(umd_police_incident_data_clean)
runApp('police_log_final_arrest.R')
umd_police_arrest_data_clean_with_type %>% group_by(type) %>% count() %>% View()
runApp('police_log_final_arrest.R')
unique(umd_arrest_combined$type)
umd_arrest_combined = readRDS("./arrest_combined.rds")
knitr::opts_chunk$set(echo = TRUE)
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == ,]
unique(umd_arrest_combined$type)
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,]
View(result_umd_arrest)
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", input$select_incident))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,]
ls_years = unique(umd_arrest_combined$year)
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,]
ls_years = unique(umd_arrest_combined$year)
single_color = "#990000"
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,] %>% na.omit()
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,] %>% na.omit()
ls_years = unique(umd_arrest_combined$year)
single_color = "#990000"
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
#scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", width = 0.5)+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", width = 0.6)+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", width = 1)+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", width = 3)+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", width = 1)+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", width = .5)+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", width = 1)+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
runApp('police_log_final_arrest.R')
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,]
ls_years = unique(umd_arrest_combined$year)
single_color = "#990000"
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", width = 1)+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,]
ls_years = unique(umd_arrest_combined$year)
single_color = "#990000"
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", width = 1)+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,]
ls_years = unique(umd_arrest_combined$year)
single_color = "#990000"
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", position = "dodge")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)+
theme(legend.position = "none")
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,]
ls_years = unique(umd_arrest_combined$year)
single_color = "#990000"
ggplot(result_umd_arrest, aes(x = year, y = number, fill = single_color))+
geom_bar(stat = "identity", position = "dodge")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)
result_umd_arrest = umd_arrest_combined[umd_arrest_combined$type == "Injured/Sick Person"  ,]
ls_years = unique(umd_arrest_combined$year)
single_color = "#990000"
ggplot(result_umd_arrest, aes(x = year, y = number, fill = race))+
geom_bar(stat = "identity", position = "dodge")+
labs(x = "Years", y = "Number of UMPD Cases",
title = paste0("UMD Arrests/Citations:  ", "Injured/Sick Person" ))+
theme_ipsum_rc(grid="Y")+
scale_x_continuous( breaks = ls_years)
runApp('police_log_final_arrest.R')
View(umd_police_arrest_data_clean_with_type)
View(umd_police_arrest_data_clean_with_type)
View(umd_police_arrest_data_clean_with_type)
View(result_umd_arrest)
View(umd_arrest_combined)
umd_arrest_combined = readRDS("./arrest_combined.rds")
umd_arrest = readRDS("./umd_arrest.rds")
View(umd_arrest)
result_umd_arrest = umd_arrest[umd_arrest$type == "Injured/Sick Person"  ,] %>%
distinct(year, umpd_case_number, arrest_number, race, type) %>%
group_by(race) %>%
summarise(num_people = n())
View(result_umd_arrest)
result_umd_arrest = umd_arrest[umd_arrest$type == "Injured/Sick Person"  ,]
result_umd_arrest = umd_arrest[umd_arrest$type == "Injured/Sick Person"  ,]
result_umd_arrest = umd_arrest[umd_arrest$type == "Injured/Sick Person",] %>% na.omit()
result_umd_arrest = umd_arrest[umd_arrest$type == "Injured/Sick Person",] %>% na.rm()
result_umd_arrest = umd_arrest[umd_arrest$type == "Injured/Sick Person",] %>% remove_empty( which = c("rows"), quiet = TRUE)
result_umd_arrest = umd_arrest[umd_arrest$type == "Injured/Sick Person",]
View(umd_arrest)
result_umd_arrest = umd_arrest[umd_arrest$type == "Injured/Sick Person",] %>% drop_na(type)
runApp('police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
library(shiny); runApp('police_logs_app.R')
runApp('police_logs_app.R')
