umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_number")
umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_case_number")
View(umd_police_arrest_data_clean_with_type)
umd_police_arrest_data_clean = umd_police_arrest_data %>%
mutate(date = substr(arrested_date_time_charge,1,8)) %>%
rowwise() %>%
mutate(time = strsplit(arrested_date_time_charge," ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
filter(year >= 2014)
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
## get incident_type for arrest data
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type)
umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_case_number")
write_rds(umd_police_arrest_data_clean_with_type, "../police-app/umd_arrest.rds")
write_rds(umd_police_incident_data_clean, "../police-app/umd_incident.rds")
umd_police_arrest_data_clean = umd_police_arrest_data %>%
mutate(date = substr(arrested_date_time_charge,1,8)) %>%
rowwise() %>%
mutate(time = strsplit(arrested_date_time_charge," ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
filter(year >= 2014)
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
## get incident_type for arrest data
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type)
umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_case_number")
View(umd_police_arrest_data_clean_with_type)
library(shiny); runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
## Number of Arrest cases
# just a line graph
umd_arrest_cases_by_year = umd_police_arrest_data_clean %>%
distinct(year, umpd_case_number) %>%
group_by(year) %>%
summarise(number_arrest_cases = n())
# people by race, can be over all, and then can be by year
umd_people_by_race = umd_police_arrest_data_clean %>%
distinct(year, umpd_case_number, arrest_number, race)
## overall
all_people_by_race = umd_people_by_race %>%
group_by(race) %>%
summarise(num_people = n())
## by year
umd_by_year_race = umd_people_by_race %>%
group_by(year, race) %>%
summarise(num_people = n())
ggplot(umd_by_year_race, aes(x = year, y = num_people, fill = race))+
geom_bar(stat = "identity", position = "dodge")
## Number of Arrest cases
# just a line graph
umd_arrest_cases_by_year = umd_police_arrest_data_clean_with_type %>%
distinct(year, umpd_case_number) %>%
group_by(year) %>%
summarise(number_arrest_cases = n())
# people by race, can be over all, and then can be by year
umd_people_by_race = umd_police_arrest_data_clean_with_type %>%
distinct(year, umpd_case_number, arrest_number, race, type)
## overall
all_people_by_race = umd_people_by_race %>%
group_by(race) %>%
summarise(num_people = n())
## by year
umd_by_year_race = umd_people_by_race %>%
group_by(year, race) %>%
summarise(num_people = n())
ggplot(umd_by_year_race, aes(x = year, y = num_people, fill = race))+
geom_bar(stat = "identity", position = "dodge")
umd_people_by_race = umd_police_arrest_data_clean_with_type %>%
distinct(year, umpd_case_number, arrest_number, race, type)
umd_people_by_race = umd_police_arrest_data_clean_with_type %>%
distinct(year, umpd_case_number, arrest_number, race, type)
View(umd_people_by_race)
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
View(umd_people_by_race)
View(umd_people_by_race)
View(umd_people_by_race)
View(all_people_by_race)
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
library(shiny); runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app/police_log_final_arrest.R')
library(shiny); runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
library(shiny); runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
hrbrthemes::import_roboto_condensed()
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
library(shiny); runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
ggplot(df_umd_arrest_time(), aes(x=time_hour, y=`n`, fill = single_color)) +
geom_bar(stat="identity") +
labs(x = "Time", y = "Number of Arrest/Citations",
title = paste0("UMD Arrests/Citations:  ", input$select_incident),
subtitle = paste0("By time of day: ", toString(min_year), "-", toString(max_year)))+
theme_ipsum_rc(grid="Y")+
scale_x_discrete( labels = c("12 a.m.", "1 a.m.", "2 a.m.", "3 a.m.", "4 a.m.", "5 a.m.", "6 a.m.", "7 a.m.","8 a.m.", "9 a.m.", "10 a.m.", "11 a.m.",
"12 p.m.", "1 p.m.", "2 p.m.", "3 p.m.", "4 p.m.", "5 p.m.", "6 p.m.", "7 p.m.","8 p.m.", "9 p.m.", "10 p.m.", "11 p.m."))+
theme(legend.position = "none")+
scale_y_discrete()
library(shiny); runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# For general data science
# For data cleaning
library(janitor)
# For loading Excel files
library(readxl)
# For working with datetime
library(lubridate)
library(jsonlite)
# For U.S. Census Bureau data
#library(tigris)
# For pretty tables
#library(kableExtra)
library(knitr)
library(plotly)
library(tidyverse)
## Functions
# Function for formatted table output
output_formatted_table = function(table, text){
table %>%
kable(caption = text) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), font_size = 14, fixed_thead = T) %>%
scroll_box(width = "100%")
}
# For general data science
# For data cleaning
library(janitor)
# For loading Excel files
library(readxl)
# For working with datetime
library(lubridate)
library(jsonlite)
# For U.S. Census Bureau data
#library(tigris)
# For pretty tables
#library(kableExtra)
library(knitr)
library(plotly)
library(tidyverse)
## Functions
# Function for formatted table output
output_formatted_table = function(table, text){
table %>%
kable(caption = text) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), font_size = 14, fixed_thead = T) %>%
scroll_box(width = "100%")
}
# UMD
umd_police_arrest_data <- read_csv("../data/handmade/umd/umd_police_arrest_data_2021-12-07.csv")
umd_police_incident_data <- read_csv("../data/handmade/umd/umd_police_incident_data_2021-12-07.csv")
View(umd_police_arrest_data)
umd_police_arrest_data_clean = umd_police_arrest_data %>%
mutate(date = substr(arrested_date_time_charge,1,8)) %>%
rowwise() %>%
mutate(time = strsplit(arrested_date_time_charge," ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
filter(year >= 2014)
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
View(umd_police_arrest_data_clean)
umd_police_arrest_data_clean = umd_police_arrest_data %>%
mutate(date = substr(arrested_date_time_charge,1,8)) %>%
rowwise() %>%
mutate(time = strsplit(arrested_date_time_charge," ")[[1]][2]) %>%
mutate(date = mdy(date), year = year(date), month = month(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
filter(year >= 2014) %>%
select(-time_list)
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
View(umd_police_arrest_data_clean)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# For general data science
# For data cleaning
library(janitor)
# For loading Excel files
library(readxl)
# For working with datetime
library(lubridate)
library(jsonlite)
# For U.S. Census Bureau data
#library(tigris)
# For pretty tables
#library(kableExtra)
library(knitr)
library(plotly)
library(tidyverse)
## Functions
# Function for formatted table output
output_formatted_table = function(table, text){
table %>%
kable(caption = text) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), font_size = 14, fixed_thead = T) %>%
scroll_box(width = "100%")
}
# UMD
umd_police_arrest_data <- read_csv("../data/handmade/umd/umd_police_arrest_data_2021-12-07.csv")
umd_police_incident_data <- read_csv("../data/handmade/umd/umd_police_incident_data_2021-12-07.csv")
# Clean UMD
umd_police_arrest_data_clean = umd_police_arrest_data %>%
mutate(date = substr(arrested_date_time_charge,1,8)) %>%
rowwise() %>%
mutate(time = strsplit(arrested_date_time_charge," ")[[1]][2]) %>%
mutate(date = mdy(date), year = year(date), month = month(date)) %>%
select(-c(1)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
filter(year >= 2014) %>%
select(-time_list)
umd_police_incident_data_clean = umd_police_incident_data %>%
mutate(date = substr(occured_date_time_location, 1,8)) %>%
rowwise() %>%
mutate(time = strsplit(occured_date_time_location, " ")[[1]][2]) %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
mutate(time_list = (str_split(time,":"))) %>%
mutate(time_hour = time_list[[1]]) %>%
rename(type = "_type") %>%
filter(year >= 2014)
## get incident_type for arrest data
umpd_incident_type = umd_police_incident_data_clean %>%
select(umpd_case_number, type) %>%
distinct(umpd_case_number, type)
umd_police_arrest_data_clean_with_type = left_join(umd_police_arrest_data_clean, umpd_incident_type, by = "umpd_case_number")
write_rds(umd_police_arrest_data_clean_with_type, "../police-app-arrests/umd_arrest.rds")
write_rds(umd_police_incident_data_clean, "../police-app-arrests/umd_incident.rds")
#### data for arrest totals
cases_by_year = umd_police_arrest_data_clean_with_type %>%
distinct(umpd_case_number, .keep_all = TRUE) %>%
group_by(year, type) %>%
summarise(number = n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(year) %>%
slice_max(order_by = number, n = 3) %>%
mutate(top_3 = "yes") %>%
select(-number)
cases_by_year_og = umd_police_arrest_data_clean_with_type %>%
distinct(umpd_case_number, .keep_all = TRUE) %>%
group_by(year, type) %>%
summarise(number = n())
arrest_combined = left_join(cases_by_year_og, cases_by_year, by = c("year", "type")) %>%
mutate(top_3 = ifelse(is.na(top_3), "no", top_3)) %>%
mutate(final_type = ifelse(top_3 == "yes", type, "Types Other Than Top 3"))
write_rds(arrest_combined, "../police-app-arrests/arrest_combined.rds")
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
View(arrest_combined)
View(umd_police_arrest_data_clean)
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
View(umd_police_arrest_data_clean_with_type)
umd_police_arrest_data_clean_with_type %>%  group_by(arrest_number) %>% count() %>% View()
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
umd_police_arrest_data_clean_with_type %>%  group_by(umpd_case_number) %>% count() %>% View()
View(umd_police_incident_data_clean)
umd_police_arrest_data_clean_with_type %>%  distinct(arrest_number, .keep_all = TRUE) %>% View())
umd_police_arrest_data_clean_with_type %>%  distinct(arrest_number, .keep_all = TRUE) %>% View()
umd_police_arrest_data_clean_with_type %>%  group_by(arrest_number) %>% count() %>% View()
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
names(umd_police_arrest_data_clean_with_type)
runApp('GitHub/university_police_logs/police-app-arrests/police_log_final_arrest.R')
library(tidyverse)
lineage <- read_csv("GitHub/lccn_lookup/lineage.csv")
lineage <- read_csv(./lccn_lookup/lineage.csv")
lineage <- read_csv("./lccn_lookup/lineage.csv")
lineage <- read_csv("./lccn_lookup/lineage.csv")
lineage <- read_csv("lccn_lookup/lineage.csv")
lineage <- read_csv("lineage.csv")
ndc_newspaper <- read_csv("ndc_newspaper.csv")
View(lineage)
View(ndc_newspaper)
x = 'the-osceola-times_5240'
gsub("_.*", "", x)
ndc_newspaper <- read_csv("ndc_newspaper.csv") %>%
mutate(ndc_newspaper_clean =gsub("_.*", "", ndc_newspaper) )
ndc_newspaper <- read_csv("ndc_newspaper.csv") %>%
mutate(ndc_newspaper_clean =gsub("_.*", "", ndc_newspaper) ) %>%
mutate(ndc_newspaper_clean = str_replace(ndc_newspaper_clean, "-", " "))
ndc_newspaper <- read_csv("ndc_newspaper.csv") %>%
mutate(ndc_newspaper_clean =gsub("_.*", "", ndc_newspaper) ) %>%
mutate(ndc_newspaper_clean = str_replace_all(ndc_newspaper_clean, "-", " "))
ndc_newspaper <- read_csv("ndc_newspaper.csv") %>%
mutate(ndc_newspaper_clean =gsub("_.*", "", ndc_newspaper) ) %>%
mutate(ndc_newspaper_clean = str_replace_all(ndc_newspaper_clean, "-", " ")) %>%
mutate(ndc_newspaper_clean = str_squish(ndc_newspaper_clean))
lineage <- read_csv("lineage.csv") %>%
mutate(title = tolower(title))
newspaper = 'the-osceola-times_5240'
result = lineage %>%
filter(str_detect(title, newspaper))
newspaper = 'the osceola times'
get_lccn = function(newspaper){
result = lineage %>%
filter(str_detect(title, newspaper))
}
result = lineage %>%
filter(str_detect(title, newspaper))
View(result)
get_lccn = function(newspaper){
result = lineage %>%
filter(str_detect(title, newspaper))
loc_name = result[,"title"][[1]]
historical_lccn = result[,"lccn"][[1]]
historical_lccn_url = paste0("https://chroniclingamerica.loc.gov/lccn/", historical_lccn, "/")
current_lccn = result[,"current_lccn"][[1]]
current_lccn_url = paste0("https://chroniclingamerica.loc.gov/lccn/", current_lccn, "/")
result_list = list(loc_name, historical_lccn_url, current_lccn_url)
}
get_lccn(newspaperp)
get_lccn(newspaper)
test = get_lccn(newspaper)
test = get_lccn(newspaper)[[1]]
test = get_lccn(newspaper)[[2]]
test = get_lccn(newspaper)[1]
test = get_lccn(newspaper)[1][1]
test = get_lccn(newspaper)[1][1]
test = get_lccn(newspaper)[[1]]
ndc_newspaper = ndc_newspaper %>%
mutate(loc_name = get_lccn(ndc_newspaper_clean)[[1]], historical_lccn = get_lccn(ndc_newspaper_clean)[[2]], current_lccn = get_lccn(ndc_newspaper_clean)[[3]] ) %>%
mutate(is_lccn_same = ifelse(historical_lccn == current_lccn), TRUE, FALSE)
get_lccn = function(newspaper){
result = lineage %>%
filter(str_detect(title, newspaper))
print(result)
loc_name = result[,"title"][[1]]
historical_lccn = result[,"lccn"][[1]]
historical_lccn_url = paste0("https://chroniclingamerica.loc.gov/lccn/", historical_lccn, "/")
current_lccn = result[,"current_lccn"][[1]]
current_lccn_url = paste0("https://chroniclingamerica.loc.gov/lccn/", current_lccn, "/")
result_list = list(loc_name, historical_lccn_url, current_lccn_url)
}
ndc_newspaper = ndc_newspaper %>%
mutate(loc_name = get_lccn(ndc_newspaper_clean)[[1]], historical_lccn = get_lccn(ndc_newspaper_clean)[[2]], current_lccn = get_lccn(ndc_newspaper_clean)[[3]] ) %>%
mutate(is_lccn_same = ifelse(historical_lccn == current_lccn), TRUE, FALSE)
ndc_newspaper = ndc_newspaper %>%
mutate(loc_name = get_lccn(ndc_newspaper_clean)[[1]], historical_lccn = get_lccn(ndc_newspaper_clean)[[2]], current_lccn = get_lccn(ndc_newspaper_clean)[[3]], num_results = get_lccn(ndc_newspaper_clean)[[4]] ) %>%
mutate(is_lccn_same = ifelse(historical_lccn == current_lccn), TRUE, FALSE)
test = get_lccn("the news")
get_lccn = function(newspaper){
result = lineage %>%
filter(str_detect(title, newspaper))
num_results = nrow(result)
loc_name = result[1,"title"][[1]]
historical_lccn = result[1,"lccn"][[1]]
historical_lccn_url = paste0("https://chroniclingamerica.loc.gov/lccn/", historical_lccn, "/")
current_lccn = result[1,"current_lccn"][[1]]
current_lccn_url = paste0("https://chroniclingamerica.loc.gov/lccn/", current_lccn, "/")
result_list = list(loc_name, historical_lccn_url, current_lccn_url, num_results)
}
test = get_lccn("the news")
View(test)
ndc_newspaper = ndc_newspaper %>%
mutate(loc_name = get_lccn(ndc_newspaper_clean)[[1]], historical_lccn = get_lccn(ndc_newspaper_clean)[[2]], current_lccn = get_lccn(ndc_newspaper_clean)[[3]], num_results = get_lccn(ndc_newspaper_clean)[[4]] ) %>%
mutate(is_lccn_same = ifelse(historical_lccn == current_lccn), TRUE, FALSE)
ndc_newspaper = ndc_newspaper %>%
mutate(loc_name = get_lccn(ndc_newspaper_clean)[[1]], historical_lccn = get_lccn(ndc_newspaper_clean)[[2]], current_lccn = get_lccn(ndc_newspaper_clean)[[3]], num_results = get_lccn(ndc_newspaper_clean)[[4]] ) %>%
mutate(is_lccn_same = ifelse(historical_lccn == current_lccn, TRUE, FALSE))
lineage <- read_csv("lineage.csv") %>%
mutate(title = tolower(title))
ndc_newspaper <- read_csv("ndc_newspaper.csv") %>%
mutate(ndc_newspaper_clean =gsub("_.*", "", ndc_newspaper) ) %>%
mutate(ndc_newspaper_clean = str_replace_all(ndc_newspaper_clean, "-", " ")) %>%
mutate(ndc_newspaper_clean = str_squish(ndc_newspaper_clean))
newspaper = 'the osceola times'
gsub("_.*", "", x)
get_lccn = function(newspaper){
result = lineage %>%
filter(str_detect(title, newspaper))
num_results = nrow(result)
loc_name = result[1,"title"][[1]]
historical_lccn = result[1,"lccn"][[1]]
historical_lccn_url = paste0("https://chroniclingamerica.loc.gov/lccn/", historical_lccn, "/")
current_lccn = result[1,"current_lccn"][[1]]
current_lccn_url = paste0("https://chroniclingamerica.loc.gov/lccn/", current_lccn, "/")
result_list = list(loc_name, historical_lccn_url, current_lccn_url, num_results)
}
test = get_lccn("the news")
ndc_newspaper = ndc_newspaper %>%
mutate(loc_name = get_lccn(ndc_newspaper_clean)[[1]], historical_lccn = get_lccn(ndc_newspaper_clean)[[2]], current_lccn = get_lccn(ndc_newspaper_clean)[[3]], num_results = get_lccn(ndc_newspaper_clean)[[4]] ) %>%
mutate(is_lccn_same = ifelse(historical_lccn == current_lccn, TRUE, FALSE))
lineage <- read_csv("lineage.csv") %>%
mutate(title = tolower(title))
ndc_newspaper <- read_csv("ndc_newspaper.csv") %>%
mutate(ndc_newspaper_clean =gsub("_.*", "", ndc_newspaper) ) %>%
mutate(ndc_newspaper_clean = str_replace_all(ndc_newspaper_clean, "-", " ")) %>%
mutate(ndc_newspaper_clean = str_squish(ndc_newspaper_clean))
ndc_newspaper_test = ndc_newspaper %>% rowwise() %>%
mutate(loc_name = get_lccn(ndc_newspaper_clean)[[1]], historical_lccn = get_lccn(ndc_newspaper_clean)[[2]], current_lccn = get_lccn(ndc_newspaper_clean)[[3]], num_results = get_lccn(ndc_newspaper_clean)[[4]] ) %>%
mutate(is_lccn_same = ifelse(historical_lccn == current_lccn, TRUE, FALSE))
View(ndc_newspaper_test)
write.csv(ndc_newspaper_test, "remaing.csv")
library(shiny); runApp('GitHub/university-police-logs/police-logs-app/police_logs_app.R')
library(shiny); runApp('police_logs_app.R')
runApp('police_logs_app.R')
runApp('police_logs_app.R')
runApp('police_logs_app.R')
umd_arrest = readRDS("./data/umd_arrest.rds")
View(umd_arrest)
umd_arrest %>%  mutate(day = wday(date)) %>%  View()
library(shiny)
library(shinydashboard)
library(tidyverse)
library(DT)
library(rsconnect)
library(janitor)
#library(plotly)
library(DT)
library(gcookbook)
library(hrbrthemes)
library(RColorBrewer)
umd_arrest %>%  mutate(day = wday(date)) %>%  View()
umd_arrest %>%  mutate(day = wday(date)) %>%  View()
library(shiny); runApp('police_logs_app.R')
library(shiny); runApp('police_logs_app.R')
runApp('police_logs_app.R')
umd_arrest = readRDS("./data/umd_arrest.rds")
umd_arrest_combined = readRDS("./data/arrest_combined.rds")
#umd_incident = readRDS("C:/Users/nicho/Documents/GitHub/university_police_logs/police-app/umd_incident.rds")
umd_arrest_list = unique(umd_arrest$type)
all_incident = "All"
umd_arrest_list = c(all_incident, umd_arrest_list)
umd_arrest_list
test = umd_arrest_list[is.na(umd_arrest_list) = FALSE]
test = umd_arrest_list[is.na(umd_arrest_list) == FALSE]
test
runApp('police_logs_app.R')
View(umd_arrest)
View(umd_arrest)
runApp('police_logs_app.R')
View(umd_arrest)
View(umd_arrest)
runApp('police_logs_app.R')
runApp('police_logs_app.R')
runApp('police_logs_app.R')
runApp('police_logs_app.R')
runApp('police_logs_app.R')
runApp('police_logs_app.R')
